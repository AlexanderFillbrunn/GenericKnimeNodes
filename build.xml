<project name="pluginbuilder" default="base.plugin.build" basedir=".">

	<property name="debug" value="true" />

	<property name="base.plugin.name" value="org.ballproject.knime" />
	<property name="base.plugin.version.major" value="0" />
	<property name="base.plugin.version.minor" value="5" />
	<property name="base.plugin.version.patch" value="0" />
	
	<!-- do not edit below this line -->

	<property file="build.properties" />
	<property file="plugin.properties" />

	<property name="base.plugin.version" value="${base.plugin.version.major}.${base.plugin.version.minor}.${base.plugin.version.patch}" />
	<property name="custom.plugin.name" value="${pluginname}" />
	<property name="custom.plugin.version" value="${pluginversion}" />
	
	<tstamp />
	<property name="tmp" value="${java.io.tmpdir}/GKN-${TSTAMP}" />
	<property name="base.plugin.build.dir" value="${tmp}/basePlugin" />
	<property name="base.plugin.build.jar" value="build/${base.plugin.name}_${base.plugin.version}.jar" />
	<property name="custom.plugin.build.src" value="${tmp}/customPlugin-sources" />
	<property name="custom.plugin.build.dir" value="${tmp}/customPlugin" />
	<property name="custom.plugin.build.jar" value="build/${custom.plugin.name}_${custom.plugin.version}.jar" />
	<property name="src" value="src" />

	<target name="clean">
		<delete dir="${tmp}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${tmp}" />
		<mkdir dir="build" />
	</target>

	<target name="base.plugin.build">
		<echo message="Debug: {debug}" />

		<mkdir dir="${base.plugin.build.dir}" />

		<mkdir dir="${base.plugin.build.dir}/lib" />
		<copy todir="${base.plugin.build.dir}/lib" failonerror="true" overwrite="true">
			<fileset dir="lib/">
				<include name="*.jar" />
			</fileset>
		</copy>

		<mkdir dir="${base.plugin.build.dir}/META-INF" />
		<copy todir="${base.plugin.build.dir}/META-INF" failonerror="true" overwrite="true">
			<fileset dir="data">
				<include name="MANIFEST.MF" />
			</fileset>
		</copy>
		<replace file="${base.plugin.build.dir}/META-INF/MANIFEST.MF" token="@@pluginVersion@@" value="${base.plugin.version}" />

		<antcall target="base.plugin.classes.build" />

		<mkdir dir="${base.plugin.build.dir}/data" />
		<copy file="data/org.ballproject.knime.base.mime.demangler.DemanglerProvider.exsd" todir="${base.plugin.build.dir}/data" />
		<copy file="data/plugin.xml" todir="${base.plugin.build.dir}" />

		<mkdir dir="${base.plugin.build.dir}/icons" />
		<copy file="data/GKN.png" todir="${base.plugin.build.dir}/icons" />

		<zip destfile="build/${base.plugin.name}_${base.plugin.version}.jar" basedir="${base.plugin.build.dir}" />
	</target>

	<target name="base.plugin.classes.build">
		<path id="lib.jar.classpath">
			<!-- include all jars found in KNIME SDK plugins -->
			<fileset dir="${knime.sdk}/plugins">
				<include name="**/*.jar" />
			</fileset>
			<!-- include our own dependencies -->
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
		</path>

		<javac srcdir="${src}" destdir="${base.plugin.build.dir}" includeantruntime="false" debug="on" debuglevel="lines,vars,source">
			<classpath refid="lib.jar.classpath" />
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>

		<touch file="${base.plugin.build.dir}/org/ballproject/knime/baseplugin.properties" />
		<propertyfile file="${base.plugin.build.dir}/org/ballproject/knime/baseplugin.properties">
			<entry key="debug" value="${debug}" />
		</propertyfile>

		<!-- copy factory-xmls and other stuff -->
		<copy todir="${base.plugin.build.dir}" failonerror="true" overwrite="true">
			<fileset dir="${src}">
				<!--<exclude name="**/*.java"/>-->
				<exclude name="**/package.htm*" />
			</fileset>
		</copy>
	</target>

	<target name="custom.plugin.build">
		<mkdir dir="${custom.plugin.build.dir}"/>
		<available property="iconfile.exists" file="${custom.plugin.build.dir}/icons/logo.png" />
		<antcall target="copyicon" />
		<antcall target="custom.plugin.classes.build" />
		<zip destfile="build/${pluginpackage}_${pluginversion}.jar" basedir="${custom.plugin.build.dir}" />
	</target>

	<target name="custom.plugin.classes.build">
		<path id="lib.jar.classpath">
			<!-- include all jars found in KNIME SDK plugins -->
			<fileset dir="${knime.sdk}/plugins">
				<include name="**/*.jar" />
			</fileset>
			<!-- include our own dependencies -->
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
			<pathelement location="build/${base.plugin.name}_${base.plugin.version}.jar" />
		</path>

		<javac srcdir="${custom.plugin.build.src}" destdir="${custom.plugin.build.dir}" includeantruntime="false" debug="on" debuglevel="lines,vars,source">
			<classpath refid="lib.jar.classpath" />
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>

		<!-- copy factory-xmls and other stuff -->
		<copy todir="${custom.plugin.build.dir}" failonerror="true" overwrite="true">
			<fileset dir="${custom.plugin.build.src}/src">
				<!--exclude name="**/*.java" /-->
				<exclude name="**/package.htm*" />
			</fileset>
		</copy>
		<copy todir="${custom.plugin.build.dir}" failonerror="true" overwrite="true">
			<fileset dir="${custom.plugin.build.src}">
				<include name="**/plugin.xml" />
				<include name="**/MANIFEST.MF" />
			</fileset>
		</copy>
	</target>

	<target name="copyicon" if="${iconfile.exists}">
		<mkdir dir="${custom.plugin.build.dir}" />
		<mkdir dir="${custom.plugin.build.dir}/icons" />
		<copy file="${custom.plugin.build.src}/icons/logo.png" todir="${custom.plugin.build.dir}/icons" />
	</target>

	<target name="nodegen" description="run node generator" depends="base.plugin.build">
		<java classname="org.ballproject.knime.nodegeneration.Main" failonerror="true" fork="true">
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${knime.sdk}/plugins">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="${base.plugin.build.jar}" />
			</classpath>
			<arg value="." />
			<arg value="${custom.plugin.build.src}" />
		</java>
		<antcall target="custom.plugin.build" />
	</target>

	<target name="test" depends="base.plugin.build">
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<pathelement location="${base.plugin.build.jar}" />
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
			</classpath>

			<!--<formatter type="plain"/>-->
			<test name="org.ballproject.knime.test.CTDNodeConfigurationWriterTest" />
			<test name="org.ballproject.knime.test.CTDNodeConfigurationReaderTest" />
			<test name="org.ballproject.knime.test.ParameterTest" />
			<test name="org.ballproject.knime.test.MIMEFileStuffTest" />
		</junit>
	</target>
</project>

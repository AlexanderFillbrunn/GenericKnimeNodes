<project name="pluginbuilder" default="buildbaseplugin" basedir=".">

	<property name="debug" value="false"/>

	<property file="build.properties"/>



	<!-- fixed/automatic properties -->
	<property name="basepluginname"   value="org.ballproject.knime"/>

	<property name="major" value="0"/>
	<property name="minor" value="4"/>
	<property name="patch" value="2"/>

	<property name="basepluginversion" value="${major}.${minor}.${patch}"/>

	<property name="temp.folder" value="${java.io.tmpdir}/temp.folder"/>
	<property name="src" value="src"/>

	<target name="clean">
		<delete dir="${temp.folder}"/>
		<delete dir="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC"/>
	</target>

	<target name="prepare">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<mkdir dir="build"/>
	</target>

	<target name="buildbaseplugin" depends="prepare">

		<echo message="Debug is:  ${debug}"/>
		
		<mkdir dir="${temp.folder}/package"/>

		<mkdir dir="${temp.folder}/package/META-INF"/>

		<antcall target="buildbaseclasses"/>

		<copy todir="${temp.folder}/package/lib" failonerror="true" overwrite="true">
			<fileset dir="lib/">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<copy todir="${temp.folder}/package/META-INF" failonerror="true" overwrite="true">
			<fileset dir="data">
				<include name="MANIFEST.MF"/>
			</fileset>
		</copy>

		<mkdir dir="${temp.folder}/package/data"/>
		<mkdir dir="${temp.folder}/package/icons"/>
		
		<copy file="data/org.ballproject.knime.base.mime.demangler.DemanglerProvider.exsd" todir="${temp.folder}/package/data"/>
		
		<copy file="data/plugin.xml" todir="${temp.folder}/package/"/>
		
		<copy file="data/GKN.png" todir="${temp.folder}/package/icons"/>
		
		<replace file="${temp.folder}/package/META-INF/MANIFEST.MF" token="@@pluginname@@" value="${basepluginname}" />
		<replace file="${temp.folder}/package/META-INF/MANIFEST.MF" token="@@pluginversion@@" value="${basepluginversion}" />

		<zip destfile="build/${basepluginname}_${basepluginversion}.jar" basedir="${temp.folder}/package"/>

		<delete dir="${temp.folder}"/>
	</target>

	<target name="buildbaseclasses">
		<path id="lib.jar.classpath">
			<!-- include all jars found in KNIME SDK plugins -->
			<fileset dir="${knimeSDKpath}/plugins">
				<include name="**/*.jar" />
			</fileset>
			<!-- include our own dependencies -->
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src}" destdir="${temp.folder}/package" includeantruntime="false" debug="on" debuglevel="lines,vars,source">
			<classpath refid="lib.jar.classpath"/>
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
		</javac>

		<touch file="${temp.folder}/package/org/ballproject/knime/baseplugin.properties"/>
		<propertyfile file="${temp.folder}/package/org/ballproject/knime/baseplugin.properties">
			<entry  key="debug" value="${debug}"/>
		</propertyfile>


		<!-- copy factory-xmls and other stuff -->
		<copy todir="${temp.folder}/package" failonerror="true" overwrite="true">
			<fileset dir="${src}">
				<!--<exclude name="**/*.java"/>-->
				<exclude name="**/package.htm*"/>
			</fileset>
		</copy>
	</target>

	<target name="buildpluginclasses">
		<path id="lib.jar.classpath">
			<!-- include all jars found in KNIME SDK plugins -->
			<fileset dir="${knimeSDKpath}/plugins">
				<include name="**/*.jar" />
			</fileset>
			<!-- include our own dependencies -->
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
			<pathelement location="build/${basepluginname}_${basepluginversion}.jar"/>
		</path>

		<javac srcdir="${pluginsources}" destdir="${temp.folder}/pluginpackage" includeantruntime="false" debug="on" debuglevel="lines,vars,source">
			<classpath refid="lib.jar.classpath"/>
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
		</javac>

		<!-- copy factory-xmls and other stuff -->
		<copy todir="${temp.folder}/pluginpackage" failonerror="true" overwrite="true">
			<fileset dir="${pluginsources}/src">
				<!--<exclude name="**/*.java" />-->
				<exclude name="**/package.htm*" />
			</fileset>
		</copy>
		
		<!--<zip destfile="${temp.folder}/pluginpackage/lib.jar" basedir="${temp.folder}/pluginpackage"/>-->
		
	</target>

	<target name="copyicon" if="${iconfile.exists}">
		<copy file="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC/icons/logo.png" todir="${temp.folder}/pluginpackage/icons"/>
	</target>
	
	<target name="buildplugin" depends="prepare">

		<property file="plugin.properties"/>

		<property name="pluginsources" value="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC"/>

		<mkdir dir="${temp.folder}/pluginpackage"/>
		
		<mkdir dir="${temp.folder}/pluginpackage/icons"/>
	
		<available property="iconfile.exists" file="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC/icons/logo.png"/>
	
		<antcall target="copyicon"/>
		
		<mkdir dir="${temp.folder}/pluginpackage/META-INF"/>
		
		<antcall target="buildpluginclasses"/>

		<copy file="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC/plugin.xml" todir="${temp.folder}/pluginpackage"/>
		
		<copy file="data/PluginMANIFEST.MF" tofile="${temp.folder}/pluginpackage/META-INF/MANIFEST.MF"/>

		<replace file="${temp.folder}/pluginpackage/META-INF/MANIFEST.MF" token="@@pluginname@@" value="${pluginpackage}" />
		<replace file="${temp.folder}/pluginpackage/META-INF/MANIFEST.MF" token="@@pluginversion@@" value="${pluginversion}" />

		<zip destfile="build/${pluginpackage}_${pluginversion}.jar" basedir="${temp.folder}/pluginpackage"/>
		
		<!--<delete dir="${temp.folder}"/>-->
	</target>

	<target name="nodegen" description="run node generator" depends="buildbaseplugin">
		<delete dir ="${java.io.tmpdir}/GENERIC_KNIME_NODES_PLUGINSRC"/>
		<java classname="org.ballproject.knime.nodegeneration.NodeGenerator" failonerror="true" fork="true">
			<classpath>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="build/${basepluginname}_${basepluginversion}.jar"/>
			</classpath>
		</java>
		<antcall target="buildplugin"/>
	</target>

	<target name="test" depends="buildbaseplugin">
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<pathelement location="build/${basepluginname}_${basepluginversion}.jar"/>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>

			<!--<formatter type="plain"/>-->
			<test name="org.ballproject.knime.test.CTDNodeConfigurationWriterTest"/>
			<test name="org.ballproject.knime.test.CTDNodeConfigurationReaderTest"/>
			<test name="org.ballproject.knime.test.ParameterTest"/>
			<test name="org.ballproject.knime.test.MIMEFileStuffTest"/>
		</junit>
	</target>
</project>

package __BASE__.knime.nodes.__NODENAME__;

import org.eclipse.jface.preference.IPreferenceStore;

import com.genericworkflownodes.knime.config.IPluginConfiguration;
import com.genericworkflownodes.knime.config.PluginConfiguration;
import com.genericworkflownodes.knime.config.reader.CTDConfigurationReader;
import com.genericworkflownodes.knime.generic_node.GenericKnimeNodeDialog;
import com.genericworkflownodes.knime.generic_node.GenericKnimeNodeFactory;

import __BASE__.knime.PluginActivator;

public class __NODENAME__NodeFactory extends GenericKnimeNodeFactory
{
	
	public __NODENAME__NodeFactory() 
	{
		// read NodeConfig from CTD
		CTDConfigurationReader reader = new CTDConfigurationReader(); 
		try
		{
			config = reader.read(this.getClass().getResourceAsStream("config/config.xml"));
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
		
		// create plugin config
		pluginConfig = createPluginConfig();
	}	
	
	private IPluginConfiguration createPluginConfig()
	{
		// create pluginConfig
		final IPreferenceStore pStore = PluginActivator.getInstance().getPreferenceStore();
	
		return new PluginConfiguration("__BASE__", pStore.getString("binaries_path"),
			PluginActivator.getInstance().getProperties(), PluginActivator.getInstance().getEnvironment());
	}
	
	@Override
	public __NODENAME__NodeModel createNodeModel()
	{
		return new __NODENAME__NodeModel(config, pluginConfig);
	}	
	
	@Override
	public GenericKnimeNodeDialog createNodeDialogPane()
	{
		return new __NODENAME__NodeDialog(config);
	}
}

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:include schemaLocation="Param_1_3.xsd"/>

	<xs:element name="tool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="1" name="name"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Name of the tool.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="1" name="version"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Version string of the tool.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="description"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							One line description of the tool.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="manual"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							More detailed description of the tool (about
							10 lines).
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="docurl"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							URL to further documentation (WWW).
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="category"
					type="xs:string">
					<xs:annotation>
						<xs:documentation>
							The category gives information on the task
							the associated tool performs. It can be used
							to categorize different tools in a GUI.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element maxOccurs="unbounded" minOccurs="0"
					name="type" type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Whats this (FIX-ME!).
						</xs:documentation>
					</xs:annotation>
				</xs:element>

				<xs:element maxOccurs="1" minOccurs="0" name="cli"
					type="cliType">
				</xs:element>

				<!-- reference PARAMETERS schema instead of redefinition -->
                <xs:element name="outputConverters" type="outputConvertersType" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>Defines possible conversion rules for the output generated after the command line call.</xs:documentation>
					</xs:annotation></xs:element>
                <xs:element minOccurs="0" name="PARAMETERS" />
			</xs:sequence>
			<xs:attribute name="status" type="StatusType" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="StatusType">
		<xs:annotation>
			<xs:documentation>Enumeration of possible status</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="internal"/>
			<xs:enumeration value="external"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="clExprType">
		<xs:annotation>
			<xs:documentation>Enumeration of possible status</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value=".*([^%]|%[0-9]+).*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="clVarType">
		<xs:annotation>
			<xs:documentation>Enumeration of possible status</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="%+\S+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="locationType">
		<xs:annotation>
			<xs:documentation>Enumeration of possible status</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value=".*([^%]|%TMP|[%%S+]|%BASENAME\[%+S+\])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="cliType">
        <xs:annotation>
        	<xs:documentation>Wraps the information necessary to construct a command line call for the tool.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="clielement" type="cliElementType">
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mappingType">
        <xs:annotation>
        	<xs:documentation>Defines which ITEM from the parameter part is associated to cliElement.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="referenceName" type="xs:string">
			<xs:annotation/>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="cliElementType">
        <xs:annotation>
        	<xs:documentation>Wraps a single element of a command line call (e.g., the -v flag for verbosity) and it's associated arguments. To model a non-option argument just leave the optionIdentifier empty.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="mapping" type="mappingType">
				<xs:annotation>
					<xs:documentation>The mapping defines the association between the cliElement and the PARAM part. 

Note: If the mapped parameter is boolean, the optionIdentifier will be added to the CLI only if the mapped value is true.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
        <xs:attribute name="optionIdentifier" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>A string used to prefix any associated values (e.g., "-v" for a boolean flag to turn on verbosity).</xs:documentation>
			</xs:annotation>
        </xs:attribute>
        <xs:attribute name="isList" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>A boolean attribute indicating whether or not the given cliElement can be expended to occur more then once on the command line.</xs:documentation>
			</xs:annotation>
        </xs:attribute>
		<xs:attribute name="required" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>Defines if the cliElement is required to build the full command line, i.e., if required is set to false and the mapped parameter was not set the complete element will not be used on the final cli.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="outputConvertersType">
        <xs:annotation>
        	<xs:documentation>Defines a list of conversion rules.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
			<xs:element name="converter" type="converterType" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The conversion rules.</xs:documentation>
				</xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="converterType">
		<xs:sequence>
			<xs:element name="converter-property" type="converterPropertyType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Properties for the specific conversion (e.g., extension to add after processing).</xs:documentation>
				</xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="class" type="xs:string">
			<xs:annotation>
				<xs:documentation>The name of the class which is used for the conversion. Note that this class needs to be instantiable in the GKN base plugin.</xs:documentation>
			</xs:annotation></xs:attribute>
		<xs:attribute name="ref" type="xs:string">
			<xs:annotation>
				<xs:documentation>A reference to the output parameter that should be transformed.</xs:documentation>
			</xs:annotation></xs:attribute>
	</xs:complexType>

	<xs:complexType name="converterPropertyType">
		<xs:attribute name="name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The name or id of the property.</xs:documentation>
			</xs:annotation></xs:attribute>
		<xs:attribute name="value" type="xs:string">
			<xs:annotation>
				<xs:documentation>The value of the property.</xs:documentation>
			</xs:annotation></xs:attribute>
	</xs:complexType>
</xs:schema>
